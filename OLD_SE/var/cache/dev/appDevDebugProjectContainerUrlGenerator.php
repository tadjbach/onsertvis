<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevDebugProjectContainerUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevDebugProjectContainerUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_open_file' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:openAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/open',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_auction_advert_list' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    '_controller' => 'SE\\AuctionBundle\\Controller\\AdvertController::listAction',    'page' => 1,  ),  2 =>   array (    'page' => '\\d*',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d*',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/demande/liste',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_auction_advert_view' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SE\\AuctionBundle\\Controller\\AdvertController::viewAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/demande',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_auction_advert_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SE\\AuctionBundle\\Controller\\AdvertController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demande/deposer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_auction_advert_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SE\\AuctionBundle\\Controller\\AdvertController::editAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/demande/modifier',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_auction_advert_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SE\\AuctionBundle\\Controller\\AdvertController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/demande/supprimer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_auction_advert_list_by_user' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    '_controller' => 'SE\\AuctionBundle\\Controller\\AdvertController::listByUserAction',    'page' => 1,  ),  2 =>   array (    'page' => '\\d*',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d*',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/mes-demandes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_auction_auction_list_by_user_proposed' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    '_controller' => 'SE\\AuctionBundle\\Controller\\AuctionController::listProposedAction',    'page' => 1,  ),  2 =>   array (    'page' => '\\d*',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d*',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/mes-encheres/proposees',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_auction_auction_list_by_user_receive' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    '_controller' => 'SE\\AuctionBundle\\Controller\\AuctionController::listReceiveAction',    'page' => 1,  ),  2 =>   array (    'page' => '\\d*',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d*',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/mes-encheres/recues',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_auction_list_auction_by_advert' => array (  0 =>   array (    0 => 'advertId',    1 => 'page',  ),  1 =>   array (    '_controller' => 'SE\\AuctionBundle\\Controller\\AuctionController::listAction',    'page' => 1,  ),  2 =>   array (    'page' => '\\d*',    'id' => '\\d*',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d*',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'advertId',    ),    2 =>     array (      0 => 'text',      1 => '/encheres-recues',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_auction_auction_list_by_user_terminated' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    '_controller' => 'SE\\AuctionBundle\\Controller\\AuctionController::listTerminatedAction',    'page' => 1,  ),  2 =>   array (    'page' => '\\d*',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d*',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/mes-encheres/terminees',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_auction_auction_list_by_user' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    '_controller' => 'SE\\AuctionBundle\\Controller\\AuctionController::listProposedAction',    'page' => 1,  ),  2 =>   array (    'page' => '\\d*',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d*',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/mes-encheres',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_auction_add' => array (  0 =>   array (    0 => 'advertId',  ),  1 =>   array (    '_controller' => 'SE\\AuctionBundle\\Controller\\AuctionController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'advertId',    ),    1 =>     array (      0 => 'text',      1 => '/demande/propser-enchere',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_auction_auction_accept' => array (  0 =>   array (    0 => 'auctionId',  ),  1 =>   array (    '_controller' => 'SE\\AuctionBundle\\Controller\\AuctionController::acceptAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'auctionId',    ),    1 =>     array (      0 => 'text',      1 => '/accepter-enchere',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_auction_message_list' => array (  0 =>   array (    0 => 'advertId',    1 => 'page',  ),  1 =>   array (    '_controller' => 'SE\\AuctionBundle\\Controller\\MessageController::listAction',    'page' => 1,  ),  2 =>   array (    'page' => '\\d*',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d*',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'advertId',    ),    2 =>     array (      0 => 'text',      1 => '/mes-messages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_auction_message_add' => array (  0 =>   array (    0 => 'advertId',    1 => 'senderId',    2 => 'receiveId',  ),  1 =>   array (    '_controller' => 'SE\\AuctionBundle\\Controller\\MessageController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'receiveId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'senderId',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'advertId',    ),    3 =>     array (      0 => 'text',      1 => '/contact/envoi-message',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_auction_advert_message_list' => array (  0 =>   array (    0 => 'advertId',    1 => 'senderId',  ),  1 =>   array (    '_controller' => 'SE\\AuctionBundle\\Controller\\MessageController::listConversationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'senderId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'advertId',    ),    2 =>     array (      0 => 'text',      1 => '/message-recues',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_auction_user_message_list' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    '_controller' => 'SE\\AuctionBundle\\Controller\\MessageController::listMessageSendAction',    'page' => 1,  ),  2 =>   array (    'page' => '\\d*',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d*',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/message-envoyes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_auction_comment_list' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    '_controller' => 'SE\\AuctionBundle\\Controller\\CommentController::listAction',    'page' => 1,  ),  2 =>   array (    'page' => '\\d*',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d*',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/mes-commentaires',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_auction_comment_add' => array (  0 =>   array (    0 => 'advertId',    1 => 'auctionUserId',  ),  1 =>   array (    '_controller' => 'SE\\AuctionBundle\\Controller\\CommentController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'auctionUserId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'advertId',    ),    2 =>     array (      0 => 'text',      1 => '/contact/ajouter-comment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_auction_comment_edit' => array (  0 =>   array (    0 => 'advertId',    1 => 'auctionUserId',  ),  1 =>   array (    '_controller' => 'SE\\AuctionBundle\\Controller\\CommentController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'auctionUserId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'advertId',    ),    2 =>     array (      0 => 'text',      1 => '/contact/modifier-comment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_user_view' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'SE\\UserBundle\\Controller\\ProfileController::viewAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/encherisseur/profile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_dpt_by_region' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SE\\AuctionBundle\\Controller\\AdvertController::getDptByRegionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demande/liste/getdptbyregion',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_city_by_dpt_region' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SE\\AuctionBundle\\Controller\\AdvertController::getCityByRegionAndDptAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demande/liste/getcitybydptandregion',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_cp_by_city' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SE\\AuctionBundle\\Controller\\AdvertController::getPostalCodeByCityAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demande/liste/getpostalcodebycity',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_postalcode' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SE\\PortalBundle\\Controller\\PostalCodeController::getPostalCodeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/getpostalcode',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_layout_allpage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SE\\LayoutBundle\\Controller\\DefaultController::allPageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/allPage',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_layout_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SE\\LayoutBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_layout_cgu' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SE\\LayoutBundle\\Controller\\DefaultController::cguAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/conditions-generales-d-utilisations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_layout_cgv' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SE\\LayoutBundle\\Controller\\DefaultController::cgvAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/conditions-generales-de-vente',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_layout_contact' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SE\\LayoutBundle\\Controller\\DefaultController::contactusAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/nous-contacter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_layout_help' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SE\\LayoutBundle\\Controller\\DefaultController::helpAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/aide',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_layout_join' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SE\\LayoutBundle\\Controller\\DefaultController::joinusAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/nous-rejoindre',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_layout_resum' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SE\\LayoutBundle\\Controller\\DefaultController::resumAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/qui-sommes-nous',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_portal_account_dashboard' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SE\\PortalBundle\\Controller\\AccountController::dashboardAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/tableau-de-bord',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_portal_account_profile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SE\\UserBundle\\Controller\\ProfileController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mon-profil',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'se_portal_account_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SE\\UserBundle\\Controller\\ProfileController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/modifier-mon-profil',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SE\\UserBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SE\\UserBundle\\Controller\\SecurityController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SE\\UserBundle\\Controller\\SecurityController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SE\\UserBundle\\Controller\\ProfileController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SE\\UserBundle\\Controller\\ProfileController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SE\\UserBundle\\Controller\\RegistrationController::registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SE\\UserBundle\\Controller\\RegistrationController::checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'SE\\UserBundle\\Controller\\RegistrationController::confirmAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SE\\UserBundle\\Controller\\RegistrationController::confirmedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SE\\UserBundle\\Controller\\ResettingController::requestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SE\\UserBundle\\Controller\\ResettingController::sendEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SE\\UserBundle\\Controller\\ResettingController::checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'SE\\UserBundle\\Controller\\ResettingController::resetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'SE\\UserBundle\\Controller\\ChangePasswordController::changePasswordAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );
        }
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
