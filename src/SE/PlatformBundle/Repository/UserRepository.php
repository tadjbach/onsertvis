<?php

namespace SE\PlatformBundle\Repository;


/**
 * SocietyTypeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
 use Doctrine\ORM\Tools\Pagination\Paginator;

class UserRepository extends \Doctrine\ORM\EntityRepository
{

  public function getUserListAdmin($nameOremail, $role, $state, $page, $nbPerPage){
      $qb = $this->createQueryBuilder('user');

      if($nameOremail !== NULL && $nameOremail !== '')
      {
          $page = 1;
          $qb->andWhere("user.username LIKE '%$nameOremail%'")->orWhere("user.email LIKE '%$nameOremail%'");
      }
      if($role !== NULL && $role !== '0')
      {
          $page = 1;

          $role = $role === '1' ? 'ROLE_SUPER_ADMIN' : 'ROLE_AUTEUR';
          $qb->andWhere("user.roles LIKE '%$role%'");
      }
      if($state !== NULL && $state !== '0')
      {
          $page = 1;
          $state = $state === '1' ? 1 : 0;
          $qb->andWhere($qb->expr()->eq('user.enabled', $state));
      }

      $qb->orderBy('user.id', 'ASC')->getQuery();
      $qb->setFirstResult(($page-1) * $nbPerPage)->setMaxResults($nbPerPage);

      return new Paginator($qb, true);
  }

  public function getJobberList($name, $page, $nbPerPage){
      $qb = $this->createQueryBuilder('user');
      $qb->where($qb->expr()->eq('user.isAcountComplete', 1));
      $qb->andWhere($qb->expr()->eq('user.isJobber', 1));

      if($name !== NULL && $name !== '')
      {
          $page = 1;
          $qb->andWhere("user.username LIKE '%$name%'");
      }

      $qb->addOrderBy('user.rate', 'DESC');
      $qb->addOrderBy('user.dateCreation', 'ASC')->getQuery();
      
      $qb->setFirstResult(($page-1) * $nbPerPage)->setMaxResults($nbPerPage);

      return new Paginator($qb, true);
  }
}
